# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
    client:
        enabled: true
        healthcheck:
            enabled: true
        fetch-registry: true
        register-with-eureka: true
        instance-info-replication-interval-seconds: 10
        registry-fetch-interval-seconds: 10
    instance:
        appname: store
        instanceId: store:${spring.application.instance-id:${random.value}}
        lease-renewal-interval-in-seconds: 5
        lease-expiration-duration-in-seconds: 10
        status-page-url-path: ${management.endpoints.web.base-path}/info
        health-check-url-path: ${management.endpoints.web.base-path}/health
        metadata-map:
            zone: primary # This is needed for the load balancer
            profile: ${spring.profiles.active}
            version: ${info.project.version:}
            git-version: ${git.commit.id.describe:}
            git-commit: ${git.commit.id.abbrev:}
            git-branch: ${git.branch:}
ribbon:
    eureka:
        enabled: true
feign:
    hystrix:
        enabled: true
#    client:
#        config:
#            default:
#                connectTimeout: 5000
#                readTimeout: 5000

# See https://github.com/Netflix/Hystrix/wiki/Configuration
hystrix:
    command:
        default:
            execution:
                isolation:
                    strategy: SEMAPHORE
# See https://github.com/spring-cloud/spring-cloud-netflix/issues/1330
#                    thread:
#                        timeoutInMilliseconds: 10000
    shareSecurityContext: true

management:
    endpoints:
        web:
            base-path: /management
            exposure:
                include: ["configprops", "env", "health", "info", "threaddump", "logfile" ]
    endpoint:
        health:
            show-details: when_authorized
    info:
        git:
            mode: full
    health:
        mail:
            enabled: false # When using the MailService, configure an SMTP server and set this to true
    metrics:
        enabled: false # http://micrometer.io/ is disabled by default, as we use http://metrics.dropwizard.io/ instead

spring:
    autoconfigure:
        exclude: org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration
    application:
        name: store
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: HTML

# ===================================================================
# OpenID Connect Settings. Default settings are for Keycloak in Docker.
# Start Keycloak using `docker-compose -f src/main/docker/keycloak.yml up`.
#
# To use Okta, your settings should resemble the following:
#
# accessTokenUri: https://{yourOktaDomain}.com/oauth2/default/v1/token
# userAuthorizationUri: https://{yourOktaDomain}.com/oauth2/default/v1/authorize
# clientId: {copy after creating an OIDC app}
# clientSecret: {copy after creating an OIDC app}
# userInfoUri: https://{yourOktaDomain}.com/oauth2/default/v1/userinfo
# tokenInfoUri: https://{yourOktaDomain}.com/oauth2/default/v1/introspect
#
# You can also override these properties using environment variables.
# For example:
#
# export SECURITY_OAUTH2_CLIENT_CLIENT_ID="jhipster"
# export SECURITY_OAUTH2_CLIENT_CLIENT_SECRET="38561a05"
# ===================================================================
security:
    oauth2:
        client:
            client-id: internal
            client-secret: internal
        resource:
            user-info-uri: http://localhost:9080/auth/realms/jhipster/protocol/openid-connect/userinfo

server:
    servlet:
        session:
            cookie:
                http-only: true

# Properties to be exposed on the /info management endpoint
info:
    # Comma separated list of profiles that will trigger the ribbon to show
    display-ribbon-on-profiles: "dev"

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
    async:
        core-pool-size: 2
        max-pool-size: 50
        queue-capacity: 10000
    # By default CORS is disabled. Uncomment to enable.
    #cors:
        #allowed-origins: "*"
        #allowed-methods: "*"
        #allowed-headers: "*"
        #exposed-headers: "Authorization,Link,X-Total-Count"
        #allow-credentials: true
        #max-age: 1800
    mail:
        from: store@localhost
    swagger:
        default-include-pattern: /api/.*
        title: store API
        description: store API documentation
        version: 0.0.1
        terms-of-service-url:
        contact-name:
        contact-url:
        contact-email:
        license:
        license-url:

logging:
    file: target/store.log

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
